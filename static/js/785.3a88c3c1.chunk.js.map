{"version":3,"file":"static/js/785.3a88c3c1.chunk.js","mappings":"oOAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,uFACwBC,EAAAA,EAAAA,IAAA,0DAC+BD,EAD/B,8CADxB,cACQE,EADR,yBAKSA,EAAQC,MALjB,kEAQA,M,SAR0B,GAAXJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,mCCwCf,EApCe,WAAO,IAAD,EACnB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRf,EAAWW,GAAaK,MAAK,SAAAC,GAC3BV,EAAUU,EAAIC,QACf,GACF,GAAE,CAACP,IASJ,OACE,iCACE,kBAAOQ,KAAK,OAAOC,SAVF,SAAAC,GACnB,GAAuB,KAAnBA,EAAEC,OAAOC,MACX,OAAOb,EAAgB,CAAC,GAG1BA,EAAgB,CAAET,MAAOoB,EAAEC,OAAOC,OACnC,EAI8CA,MAAOZ,KAClD,yBACGL,EAAOkB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMhB,GAAvC,SACGY,EAAKK,SAFDL,EAAKE,GAMjB,QAIR,C","sources":["Services/FetchVideos.js","components/Pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function FetchVideo(query) {\n  const request = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=5a5f4cc82b8fd2c121a63200cd7abf1a`\n  );\n\n  return request.data;\n}\n\nexport default FetchVideo\n","import FetchVideo from 'Services/FetchVideos';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    FetchVideo(searchQuery).then(res => {\n      setMovies(res.results);\n    });\n  }, [searchQuery]);\n  const handleChange = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: e.target.value });\n  };\n\n  return (\n    <>\n      <input type=\"text\" onChange={handleChange} value={searchQuery} />\n      <div>\n        {movies.map(item => {\n          return (\n            <li key={item.id}>\n              <Link to={`${item.id}`} state={{ from: location }}>\n                {item.title}\n              </Link>\n            </li>\n          );\n        })}\n      </div>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["FetchVideo","query","axios","request","data","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","then","res","results","type","onChange","e","target","value","map","item","to","id","state","from","title"],"sourceRoot":""}