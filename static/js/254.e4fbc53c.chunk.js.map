{"version":3,"file":"static/js/254.e4fbc53c.chunk.js","mappings":"6OAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,uFAEyBC,EAAAA,EAAAA,IAAA,6CAAgDD,EAAhD,8CAFzB,cAEQE,EAFR,yBAGSA,EAASC,MAHlB,kEAMA,M,SAN4B,GAAbJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,0BCkEf,EA/DqB,WAAO,IAAD,IACjBK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAMnD,IAJAC,EAAAA,EAAAA,YAAU,WACRhB,EAAaK,GAASY,KAAKR,EAC5B,GAAE,CAACJ,IAECG,EAAL,CACA,IAAQU,EAAuDV,EAAvDU,MAAOC,EAAgDX,EAAhDW,aAAcC,EAAkCZ,EAAlCY,SAAUC,EAAwBb,EAAxBa,OAAQC,EAAgBd,EAAhBc,YAI/C,OAFAC,QAAQC,IAAIhB,EAAMa,OAAOI,SAGvB,iCACE,SAAC,KAAD,CAAMC,GAAId,EAAYe,QAAtB,sBAEA,iBAAKC,UAAU,YAAf,WACE,gBACEA,UAAU,UACVC,IAAK,kCAAoCP,EACzCQ,IAAI,YAGN,4BACE,wBAAKZ,KACL,oCAAYC,MACZ,sCACA,uBAAIC,KACJ,oCACA,eAAIQ,UAAU,SAAd,SACGP,EAAOU,KAAI,SAAAC,GACV,OACE,eAAIJ,UAAU,aAAd,UACE,cAAGA,UAAU,OAAb,SAAqBI,EAAKC,QADID,EAAK/B,GAIxC,aAKP,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMyB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAKN,SAAC,EAAAQ,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QA/CY,CAmDnB,C","sources":["Services/FetchDetails.js","components/Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function FetchDetails(id) {\n\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=5a5f4cc82b8fd2c121a63200cd7abf1a`);\n  return response.data;\n}\n\nexport default FetchDetails\n\n","import { useEffect, useRef, useState, Suspense } from 'react';\nimport FetchDetails from 'Services/FetchDetails';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    FetchDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) return;\n  const { title, vote_average, overview, genres, poster_path } = movie;\n\n  console.log(movie.genres.length);\n\n  return (\n    <>\n      <Link to={backLinkRef.current}>Go back</Link>\n\n      <div className=\"mainBlock\">\n        <img\n          className=\"mainImg\"\n          src={'https://image.tmdb.org/t/p/w500' + poster_path}\n          alt=\"poster\"\n        />\n\n        <div>\n          <h2>{title}</h2>\n          <p>Rating: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <ul className=\"genres\">\n            {genres.map(item => {\n              return (\n                <li className=\"genresList\" key={item.id}>\n                  <p className=\"genr\">{item.name}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["FetchDetails","id","axios","response","data","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkRef","useRef","state","from","useEffect","then","title","vote_average","overview","genres","poster_path","console","log","length","to","current","className","src","alt","map","item","name","Suspense","fallback"],"sourceRoot":""}